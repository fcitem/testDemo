<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fc.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.fc.bean.Product" >
    <id column="proId" property="proid" jdbcType="VARCHAR" />
    <result column="proName" property="proname" jdbcType="VARCHAR" />
    <result column="proType" property="protype" jdbcType="VARCHAR" />
    <result column="proValue" property="provalue" jdbcType="DOUBLE" />
    <result column="proImg" property="proimg" jdbcType="VARCHAR" />
    <result column="proDesc" property="prodesc" jdbcType="VARCHAR" />
    <result column="proController" property="procontroller" jdbcType="VARCHAR" />
    <result column="proMl" property="proml" jdbcType="DOUBLE" />
    <result column="pronowValue" property="pronowvalue" jdbcType="DOUBLE" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.fc.bean.productAndInfo" >
    <id column="proId" property="proid" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="nowValue" property="nowvalue" jdbcType="DOUBLE" />
    <result column="proNumber" property="pronumber" jdbcType="INTEGER" />
    <result column="proName" property="proname" jdbcType="VARCHAR" />
    <result column="proType" property="protype" jdbcType="VARCHAR" />
    <result column="proValue" property="provalue" jdbcType="DOUBLE" />
    <result column="proImg" property="proimg" jdbcType="VARCHAR" />
    <result column="proDesc" property="prodesc" jdbcType="VARCHAR" />
    <result column="proController" property="procontroller" jdbcType="VARCHAR" />
    <result column="proMl" property="proml" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    proId, proName, proType, proValue, proImg, proDesc, proController, proMl, pronowValue
  </sql>
  <sql id="Base_Column_List2">
  	info.createTime,info.nowValue,info.proNumber,info.proId,pro.proName,pro.proType,pro.proValue,pro.proImg,pro.proDesc,pro.proController,pro.proMl,pro.pronowValue
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fc.bean.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
   <select id="selectProAndInfoBylimit" resultMap="BaseResultMap" parameterType="com.fc.bean.ProductExample">
  	select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List2" />
    from product as pro inner join pro_info as info on pro.proId=info.proId
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="begin != null" >
      limit ${begin},${number}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from product
    where proId = #{proid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from product
    where proId = #{proid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fc.bean.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fc.bean.Product" >
    insert into product (proId, proName, proType, 
      proValue, proImg, proDesc, 
      proController, proMl, pronowValue
      )
    values (#{proid,jdbcType=VARCHAR}, #{proname,jdbcType=VARCHAR}, #{protype,jdbcType=VARCHAR}, 
      #{provalue,jdbcType=DOUBLE}, #{proimg,jdbcType=VARCHAR}, #{prodesc,jdbcType=VARCHAR}, 
      #{procontroller,jdbcType=VARCHAR}, #{proml,jdbcType=DOUBLE}, #{pronowvalue,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fc.bean.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proid != null" >
        proId,
      </if>
      <if test="proname != null" >
        proName,
      </if>
      <if test="protype != null" >
        proType,
      </if>
      <if test="provalue != null" >
        proValue,
      </if>
      <if test="proimg != null" >
        proImg,
      </if>
      <if test="prodesc != null" >
        proDesc,
      </if>
      <if test="procontroller != null" >
        proController,
      </if>
      <if test="proml != null" >
        proMl,
      </if>
      <if test="pronowvalue != null" >
        pronowValue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proid != null" >
        #{proid,jdbcType=VARCHAR},
      </if>
      <if test="proname != null" >
        #{proname,jdbcType=VARCHAR},
      </if>
      <if test="protype != null" >
        #{protype,jdbcType=VARCHAR},
      </if>
      <if test="provalue != null" >
        #{provalue,jdbcType=DOUBLE},
      </if>
      <if test="proimg != null" >
        #{proimg,jdbcType=VARCHAR},
      </if>
      <if test="prodesc != null" >
        #{prodesc,jdbcType=VARCHAR},
      </if>
      <if test="procontroller != null" >
        #{procontroller,jdbcType=VARCHAR},
      </if>
      <if test="proml != null" >
        #{proml,jdbcType=DOUBLE},
      </if>
      <if test="pronowvalue != null" >
        #{pronowvalue,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fc.bean.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.proid != null" >
        proId = #{record.proid,jdbcType=VARCHAR},
      </if>
      <if test="record.proname != null" >
        proName = #{record.proname,jdbcType=VARCHAR},
      </if>
      <if test="record.protype != null" >
        proType = #{record.protype,jdbcType=VARCHAR},
      </if>
      <if test="record.provalue != null" >
        proValue = #{record.provalue,jdbcType=DOUBLE},
      </if>
      <if test="record.proimg != null" >
        proImg = #{record.proimg,jdbcType=VARCHAR},
      </if>
      <if test="record.prodesc != null" >
        proDesc = #{record.prodesc,jdbcType=VARCHAR},
      </if>
      <if test="record.procontroller != null" >
        proController = #{record.procontroller,jdbcType=VARCHAR},
      </if>
      <if test="record.proml != null" >
        proMl = #{record.proml,jdbcType=DOUBLE},
      </if>
      <if test="record.pronowvalue != null" >
        pronowValue = #{record.pronowvalue,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set proId = #{record.proid,jdbcType=VARCHAR},
      proName = #{record.proname,jdbcType=VARCHAR},
      proType = #{record.protype,jdbcType=VARCHAR},
      proValue = #{record.provalue,jdbcType=DOUBLE},
      proImg = #{record.proimg,jdbcType=VARCHAR},
      proDesc = #{record.prodesc,jdbcType=VARCHAR},
      proController = #{record.procontroller,jdbcType=VARCHAR},
      proMl = #{record.proml,jdbcType=DOUBLE},
      pronowValue = #{record.pronowvalue,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fc.bean.Product" >
    update product
    <set >
      <if test="proname != null" >
        proName = #{proname,jdbcType=VARCHAR},
      </if>
      <if test="protype != null" >
        proType = #{protype,jdbcType=VARCHAR},
      </if>
      <if test="provalue != null" >
        proValue = #{provalue,jdbcType=DOUBLE},
      </if>
      <if test="proimg != null" >
        proImg = #{proimg,jdbcType=VARCHAR},
      </if>
      <if test="prodesc != null" >
        proDesc = #{prodesc,jdbcType=VARCHAR},
      </if>
      <if test="procontroller != null" >
        proController = #{procontroller,jdbcType=VARCHAR},
      </if>
      <if test="proml != null" >
        proMl = #{proml,jdbcType=DOUBLE},
      </if>
      <if test="pronowvalue != null" >
        pronowValue = #{pronowvalue,jdbcType=DOUBLE},
      </if>
    </set>
    where proId = #{proid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fc.bean.Product" >
    update product
    set proName = #{proname,jdbcType=VARCHAR},
      proType = #{protype,jdbcType=VARCHAR},
      proValue = #{provalue,jdbcType=DOUBLE},
      proImg = #{proimg,jdbcType=VARCHAR},
      proDesc = #{prodesc,jdbcType=VARCHAR},
      proController = #{procontroller,jdbcType=VARCHAR},
      proMl = #{proml,jdbcType=DOUBLE},
      pronowValue = #{pronowvalue,jdbcType=DOUBLE}
    where proId = #{proid,jdbcType=VARCHAR}
  </update>
</mapper>